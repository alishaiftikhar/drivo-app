# Generated by Django 5.2 on 2025-09-07 14:46

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import drivo.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_driver', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'drivo_user',
            },
            managers=[
                ('objects', drivo.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=100)),
                ('cnic', models.CharField(blank=True, max_length=15, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number', regex='^\\+?\\d{10,15}$')])),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('dp', models.ImageField(blank=True, default='profile_pics/default_client.png', null=True, upload_to='profile_pics/')),
                ('last_location_update', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'drivo_clientprofile',
            },
        ),
        migrations.CreateModel(
            name='DriverProfile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('cnic', models.CharField(blank=True, max_length=15, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('driving_license', models.CharField(blank=True, max_length=50, null=True)),
                ('license_expiry', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number', regex='^\\+?\\d{10,15}$')])),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('available', 'Available'), ('busy', 'Busy'), ('offline', 'Offline')], default='pending', max_length=20)),
                ('dp', models.ImageField(blank=True, default='profile_pics/default_driver.png', null=True, upload_to='profile_pics/')),
                ('current_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('current_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('last_location_update', models.DateTimeField(auto_now=True)),
                ('cnic_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('license_verified', models.BooleanField(default=False)),
                ('city_verified', models.BooleanField(default=False)),
                ('bank_account_type', models.CharField(choices=[('bank_account', 'Bank Account'), ('jazzcash', 'JazzCash'), ('easypaisa', 'EasyPaisa'), ('paypal', 'PayPal'), ('onebill', 'OneBill')], default='bank_account', max_length=20)),
                ('bank_account_number', models.CharField(blank=True, max_length=30, null=True)),
                ('bank_account_holder', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_account_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='driver_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'drivo_driverprofile',
            },
        ),
        migrations.CreateModel(
            name='EmailOTP',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_used', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(default=datetime.datetime(2025, 9, 7, 14, 51, 46, 130366, tzinfo=datetime.timezone.utc))),
            ],
            options={
                'db_table': 'drivo_emailotp',
                'indexes': [models.Index(fields=['email'], name='drivo_email_email_4a306f_idx'), models.Index(fields=['created_at'], name='drivo_email_created_ac0429_idx'), models.Index(fields=['email', 'expires_at'], name='drivo_email_email_bb1967_idx')],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('ride_updates', models.BooleanField(default=True)),
                ('promotions', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'drivo_notificationpreference',
            },
        ),
        migrations.CreateModel(
            name='PushNotificationToken',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('device_type', models.CharField(choices=[('ios', 'iOS'), ('android', 'Android'), ('web', 'Web'), ('unknown', 'Unknown')], default='unknown', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'drivo_pushnotificationtoken',
            },
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pickup_location', models.CharField(max_length=255)),
                ('dropoff_location', models.CharField(max_length=255)),
                ('pickup_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
                ('pickup_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
                ('dropoff_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
                ('dropoff_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
                ('scheduled_datetime', models.DateTimeField(blank=True, null=True)),
                ('vehicle_type', models.CharField(choices=[('car', 'Car'), ('bike', 'Bike'), ('van', 'Van'), ('truck', 'Truck'), ('suv', 'SUV')], default='car', max_length=50)),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('cng', 'CNG'), ('diesel', 'Diesel')], default='petrol', max_length=20)),
                ('trip_type', models.CharField(choices=[('one_way', 'One Way'), ('two_way', 'Two Way'), ('round_trip', 'Round Trip')], default='one_way', max_length=20)),
                ('fare', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('distance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('duration', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('accepted', 'Accepted'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='requested', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rides', to='drivo.clientprofile')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rides', to='drivo.driverprofile')),
            ],
            options={
                'db_table': 'drivo_ride',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='drivo.clientprofile')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='drivo.driverprofile')),
                ('ride', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='drivo.ride')),
            ],
            options={
                'db_table': 'drivo_review',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('driver_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('paypal', 'PayPal'), ('bank_transfer', 'Bank Transfer'), ('jazzcash', 'JazzCash'), ('easypaisa', 'EasyPaisa')], max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='drivo.clientprofile')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='drivo.driverprofile')),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='drivo.ride')),
            ],
            options={
                'db_table': 'drivo_payment',
            },
        ),
        migrations.CreateModel(
            name='Earning',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='drivo.driverprofile')),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='drivo.ride')),
            ],
            options={
                'db_table': 'drivo_earning',
            },
        ),
        migrations.CreateModel(
            name='Cancellation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('cancellation_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cancelled_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancellations', to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancellations', to='drivo.ride')),
            ],
            options={
                'db_table': 'drivo_cancellation',
            },
        ),
        migrations.CreateModel(
            name='RideRequest',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pickup_location', models.CharField(max_length=255)),
                ('dropoff_location', models.CharField(max_length=255)),
                ('pickup_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('pickup_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('dropoff_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('dropoff_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('scheduled_datetime', models.DateTimeField(blank=True, null=True)),
                ('vehicle_type', models.CharField(choices=[('car', 'Car'), ('bike', 'Bike'), ('van', 'Van'), ('truck', 'Truck'), ('suv', 'SUV')], default='car', max_length=50)),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('cng', 'CNG'), ('diesel', 'Diesel')], default='petrol', max_length=50)),
                ('trip_type', models.CharField(choices=[('one_way', 'One Way'), ('two_way', 'Two Way'), ('round_trip', 'Round Trip')], default='one_way', max_length=50)),
                ('estimated_fare', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ride_requests', to='drivo.clientprofile')),
            ],
            options={
                'db_table': 'drivo_ride_request',
            },
        ),
        migrations.AddField(
            model_name='ride',
            name='request',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rides', to='drivo.riderequest'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='drivo_user_email_a62912_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_driver', 'is_client'], name='drivo_user_is_driv_aed093_idx'),
        ),
        migrations.AddIndex(
            model_name='clientprofile',
            index=models.Index(fields=['user'], name='drivo_clien_user_id_e59320_idx'),
        ),
        migrations.AddIndex(
            model_name='clientprofile',
            index=models.Index(fields=['latitude', 'longitude'], name='drivo_clien_latitud_829024_idx'),
        ),
        migrations.AddIndex(
            model_name='driverprofile',
            index=models.Index(fields=['user'], name='drivo_drive_user_id_945aa2_idx'),
        ),
        migrations.AddIndex(
            model_name='driverprofile',
            index=models.Index(fields=['status'], name='drivo_drive_status_063753_idx'),
        ),
        migrations.AddIndex(
            model_name='driverprofile',
            index=models.Index(fields=['current_latitude', 'current_longitude'], name='drivo_drive_current_7c13dd_idx'),
        ),
        migrations.AddIndex(
            model_name='driverprofile',
            index=models.Index(fields=['status', 'current_latitude', 'current_longitude'], name='drivo_drive_status_b262ca_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['client'], name='drivo_revie_client__25b879_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['driver'], name='drivo_revie_driver__109429_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['ride'], name='drivo_revie_ride_id_2af3bc_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['rating'], name='drivo_revie_rating_a48606_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('ride', 'client', 'driver')},
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['ride'], name='drivo_payme_ride_id_366853_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['client'], name='drivo_payme_client__ee4e31_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['driver'], name='drivo_payme_driver__0fa44e_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='drivo_payme_status_c6740b_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['created_at'], name='drivo_payme_created_96b934_idx'),
        ),
        migrations.AddIndex(
            model_name='earning',
            index=models.Index(fields=['driver'], name='drivo_earni_driver__91c8cd_idx'),
        ),
        migrations.AddIndex(
            model_name='earning',
            index=models.Index(fields=['payment_status'], name='drivo_earni_payment_855d03_idx'),
        ),
        migrations.AddIndex(
            model_name='cancellation',
            index=models.Index(fields=['ride'], name='drivo_cance_ride_id_c5fc7a_idx'),
        ),
        migrations.AddIndex(
            model_name='riderequest',
            index=models.Index(fields=['client'], name='drivo_ride__client__f14409_idx'),
        ),
        migrations.AddIndex(
            model_name='riderequest',
            index=models.Index(fields=['status'], name='drivo_ride__status_ff5c5f_idx'),
        ),
        migrations.AddIndex(
            model_name='riderequest',
            index=models.Index(fields=['created_at'], name='drivo_ride__created_7ec019_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['request'], name='drivo_ride_request_ee21ca_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['client'], name='drivo_ride_client__6daca7_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['driver'], name='drivo_ride_driver__da99f2_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['status'], name='drivo_ride_status_661eb9_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['created_at'], name='drivo_ride_created_3a55dd_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['status', 'created_at'], name='drivo_ride_status_654c01_idx'),
        ),
    ]
